#pragma once
#include "../../../SDK/SDK.h"
#include "../../Visuals/Render/GUI/Menu/InputHelper/InputHelper.h"

class CAntiAimBeta
{
	bool bPacketFlip = false;
	bool bFakeJitter = false;
	bool bRealJitter = false;
	bool bPitchJitter = false;
	float lastRealAngle = -90.f;
	float lastFakeAngle = 90.f;
	int edgeToEdgeOn = 0;
	float EdgeDistance( float edgeRayYaw );
	bool FindEdge( float edgeOrigYaw );

	//legit
	float GetLegitYaw( ); //fake yaw static forward + real

	//rage
	float GetRealRageYaw( ); 	// real - static + jitter + spin
	float GetFakeRageYaw( ); 	// fake - static + jitter + spin
	std::pair<float, float> GetRagePitch( ); //real + fake
	// automatic + manual
	// real - up + down / fake
	//bool IsScopedPlayer( );

	//main
	void FixMovement( CUserCmd *pCmd, const Vec3 &vOldAngles, float fOldSideMove, float fOldForwardMove );
public:
	bool bRealFlip = false;
	bool bFakeFlip = false;
	void Run( CUserCmd* pCmd, bool* bSendPacket );
	void DoReal( CUserCmd* pCmd, bool* bSendPacket );
	void DoFake( CUserCmd* pCmd, bool* bSendPacket );
};

inline CAntiAimBeta g_AntiAimBeta;